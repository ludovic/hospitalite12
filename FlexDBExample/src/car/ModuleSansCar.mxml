<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	<mx:Script>
		<![CDATA[
			import common.events.DocEvent;
			import common.helper.Tools;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			import phi.db.Database;
			import phi.db.Query;
			import phi.interfaces.IDatabase;
			import phi.interfaces.IQuery;
			
			private var db       :IDatabase;
			private var query    :IQuery;
			
			[Bindable]
			public var titleText:String;
			[Bindable]
			public var provider:ArrayCollection;
			
			
			
			public function generateModuleProvider(chambreId:Object=0):void
			{
				db = Database.getInstance();
				query= new Query();
				query.connect("conn1", db);
				query.addEventListener(Query.QUERY_END, provideModule);
				query.addEventListener(Query.QUERY_ERROR,queryError);
				
				if((index.categorieUtilisateur == "hospitalier")||(index.categorieUtilisateur == "inscription")||((index.categorieUtilisateur == "admin")&& (roleSelecteur.selectedLabel=="Hospitalier")))
				{
					ncCol.visible = true;
					query.execute("select ins.nom,ins.prenom,ins.DateNaissance,ins.nouveau,ins.id_personne,g.nom as gare,ins.section from gare g, (SELECT p.nom, p.prenom,p.DateNaissance,p.id_personne,h.id_gare,h.nouveau,s.section" +
						" FROM `personne` p, `etre_hospitalier` eh, `inscrire` i, hospitalier h, secteur s" +
						" WHERE eh.id_pele ="+ index.peleActuel.id_pele+
						" AND p.id_personne = i.id_personne " +
						" AND i.id_transport = 0"+
						" AND p.id_personne = eh.id_personne" +
						" AND h.transport = 'car'" +
						" AND h.id_hospitalier = eh.id_hospitalier" +
						" AND p.id_secteur = s.id_secteur" +
						" GROUP BY p.id_personne) ins where ins.id_gare = g.id_gare ");
				}
				else if((index.categorieUtilisateur == "malade")||((index.categorieUtilisateur == "admin")&& (roleSelecteur.selectedLabel=="Malade")))
				{
					ncCol.visible = false;
					query.execute("select ins.nom,ins.prenom,ins.DateNaissance,ins.id_personne,g.nom as gare,ins.section from gare g, (SELECT p.nom, p.prenom,p.DateNaissance,p.id_personne,m.id_gare,s.section" +
						" FROM `personne` p, `etre_malade` em, `inscrire` i, malade m, secteur s" +
						" WHERE em.id_pele ="+ index.peleActuel.id_pele+
						" AND p.id_personne = i.id_personne " +
						" AND i.id_transport = 0"+
						" AND p.id_personne = em.id_personne" +
						" AND m.id_malade = em.id_malade" +
						" AND p.id_secteur = s.id_secteur" +
						" GROUP BY p.id_personne) ins where ins.id_gare = g.id_gare ");
				}
				else if((index.categorieUtilisateur == "pelerin")||((index.categorieUtilisateur == "admin")&& (roleSelecteur.selectedLabel=="Pélerin")))
				{
					ncCol.visible = false;
					query.execute("select ins.nom,ins.prenom,ins.DateNaissance,ins.id_personne,g.nom as gare,ins.section from gare g, (SELECT p.nom, p.prenom,p.DateNaissance,p.id_personne,pel.id_gare,s.section" +
						" FROM `personne` p, `etre_pelerin` ep, `inscrire` i, pelerin pel, secteur s" +
						" WHERE ep.id_pele ="+ index.peleActuel.id_pele+
						" AND p.id_personne = i.id_personne " +
						" AND i.id_transport = 0"+
						" AND p.id_personne = ep.id_personne" +
						" AND pel.id_pelerin = ep.id_pelerin" +
						" AND p.id_secteur = s.id_secteur" +
						" GROUP BY p.id_personne) ins where ins.id_gare = g.id_gare ");
				}
			}
			
			private function provideModule(evt:Object):void
			{
				provider = query.getRecords();
				for(var i:int=0;i<provider.length;++i)
				{
					var myObject:Object = provider[i]
					myObject.age = Tools.age(Tools.stringToDate(myObject.DateNaissance) , Tools.stringToDate(index.peleActuel.Debut));
				}
			}
			private function queryError(evt:Event):void
			{
				Alert.show(query.getError());
			}
			
			protected function affecterA(event:MouseEvent):void
			{
				if(listHospi.selectedItem)
				{
					var formulaireCar:FormulaireCar = new FormulaireCar();
					PopUpManager.addPopUp(formulaireCar,this.parentApplication as DisplayObject,true);
					PopUpManager.centerPopUp(formulaireCar);
					formulaireCar.setFormulaire(listHospi.selectedItem);
					formulaireCar.addEventListener(Car.RELOAD_MODULE,refresh);
				}
			}
			
			private function refresh(evt:Event):void
			{
				this.dispatchEvent( new DocEvent(Car.RELOAD_MODULE));
			}
			
		]]>
	</mx:Script>
	<mx:Label id="title" text="{titleText}"/>
	<mx:VBox height="100%" width="100%">
		<mx:HBox width="100%">
			<mx:Button label="Voyage avec" click="affecterA(event)" enabled="{!index.visuMode}"/>
			<mx:Spacer width="100%"/>
			<mx:ComboBox id="roleSelecteur" dataProvider="{new ArrayCollection(['Hospitalier','Malade','Pélerin'])}" visible="{(index.categorieUtilisateur == 'admin')}" change="generateModuleProvider(event)"/>
		</mx:HBox>
		<mx:DataGrid id="listHospi" dataProvider="{provider}" height="100%" width="100%">
			<mx:columns>
				<mx:DataGridColumn headerText="Nom" dataField="nom"/>
				<mx:DataGridColumn headerText="Prenom" dataField="prenom"/>
				<mx:DataGridColumn headerText="Gare Demandée" dataField="gare"/>
				<mx:DataGridColumn headerText="Age" dataField="age"/>
				<mx:DataGridColumn headerText="Nouveau" dataField="nouveau" id="ncCol"/>
				<mx:DataGridColumn headerText="Secteur" dataField="section"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
</mx:VBox>
