<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="302" height="140" creationComplete="creationCompleteHandler(event)">
	<mx:Script>
		<![CDATA[
			import common.events.DocEvent;
			import common.helper.Tools;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			
			import phi.db.Database;
			import phi.db.Query;
			import phi.interfaces.IDatabase;
			import phi.interfaces.IQuery;
			
			import proxy.AffectationProxy;
			import proxy.CarProxy;
			import proxy.ChambreProxy;
			
			private var db       :IDatabase;
			private var query    :IQuery;
			private var query2    :IQuery;
			private var hospitalierID:int;
			private var carOld:Number;
			private var item:Object;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				db = Database.getInstance();
				query = new Query();
				query.connect("conn1", db);
				query2 = new Query();
				query2.connect("conn1", db);
			}
			
			public function setFormulaire(item:Object,carOld:Number=NaN):void
			{
				this.item = item;
				hospitalierID = item.id_personne;
				this.carOld = carOld;
			}
			
			protected function valider(event:MouseEvent):void
			{
				query.addEventListener(Query.QUERY_END,insertRole);
				query.addEventListener(Query.QUERY_ERROR,queryError);
				
				if(item.personne_role != "")
				{
					switch (item.personne_role ){
						case'responsable':
							query.execute("DELETE FROM avoir_responsable  WHERE id_transport="+carOld+" AND id_personne="+hospitalierID+" AND id_pele="+index.peleActuel.id_pele+" AND direction = 'retour' ", Query.DELETE );
							break;
						case'ide':
							query.execute("DELETE FROM ide  WHERE id_transport="+carOld+" AND id_personne="+hospitalierID+" AND id_pele="+index.peleActuel.id_pele+" AND direction = 'retour' ", Query.DELETE );
							break;
						case'bagages':
							query.execute("DELETE FROM bagages  WHERE id_transport="+carOld+" AND id_personne="+hospitalierID+" AND id_pele="+index.peleActuel.id_pele+" AND direction = 'retour' ", Query.DELETE );
							break;
						case'intendance':
							query.execute("DELETE FROM intendance  WHERE id_transport="+carOld+" AND id_personne="+hospitalierID+" AND id_pele="+index.peleActuel.id_pele+" AND direction = 'retour' ", Query.DELETE );
							break;
						case'animation':
							query.execute("DELETE FROM animation  WHERE id_transport="+carOld+" AND id_personne="+hospitalierID+" AND id_pele="+index.peleActuel.id_pele+" AND direction = 'retour' ", Query.DELETE );
							break;
					}
					
				}
				else
					insertRole();
				
			}
			
			private function insertRole(event:Object=null):void
			{
				query2.addEventListener(Query.QUERY_END,end);
				query2.addEventListener(Query.QUERY_ERROR,queryError);
				switch (roleList.selectedLabel){
					case'Responsable':
						query2.execute("INSERT INTO avoir_responsable (`id_transport`, `id_personne`,`id_pele`,`direction`) VALUES ("+carOld+","+hospitalierID+","+index.peleActuel.id_pele+", 'retour') ", Query.INSERT );
						break;
					case'IDE':
						query2.execute("INSERT INTO ide (`id_transport`, `id_personne`,`id_pele`,`direction`) VALUES ("+carOld+","+hospitalierID+","+index.peleActuel.id_pele+", 'retour') ", Query.INSERT );
						break;
					case'Bagages':
						query2.execute("INSERT INTO bagages (`id_transport`, `id_personne`,`id_pele`,`direction`) VALUES ("+carOld+","+hospitalierID+","+index.peleActuel.id_pele+", 'retour') ", Query.INSERT );
						break;
					case'Intendance':
						query2.execute("INSERT INTO intendance (`id_transport`, `id_personne`,`id_pele`,`direction`) VALUES ("+carOld+","+hospitalierID+","+index.peleActuel.id_pele+", 'retour') ", Query.INSERT );
						break;
					case'Animation':
						query2.execute("INSERT INTO animation (`id_transport`, `id_personne`,`id_pele`,`direction`) VALUES ("+carOld+","+hospitalierID+","+index.peleActuel.id_pele+", 'retour') ", Query.INSERT );
						break;
				}
			}
			
			protected function close(event:Object):void
			{
				PopUpManager.removePopUp(this);
			}
			protected function end(event:Object):void
			{
				this.dispatchEvent(new DocEvent(Car.RELOAD_MODULE));
				PopUpManager.removePopUp(this);
			}
			
			private function queryError(evt:Event):void
			{
				Alert.show((evt.target as Query).getError());
			}
			
		]]>
	</mx:Script>
	<mx:Label id="myLabel" text="Role" width="100%"/>
	<mx:ComboBox id="roleList" dataProvider="{['Responsable','IDE','Bagages','Intendance','Animation']}" selectedIndex="0"></mx:ComboBox>
	<mx:HBox width="100%" horizontalAlign="center">
		<mx:Button label="Valider" click="valider(event)"/>
		<mx:Button label="Annuler" click="close(event)"/>
	</mx:HBox>
	
</mx:TitleWindow>
