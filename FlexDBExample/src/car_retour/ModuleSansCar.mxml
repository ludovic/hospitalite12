<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%">
	<mx:Script>
		<![CDATA[
			import common.events.DocEvent;
			import common.helper.SortUtil;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			import phi.db.Database;
			import phi.db.Query;
			import phi.interfaces.IDatabase;
			import phi.interfaces.IQuery;
			
			private var db       :IDatabase;
			private var query    :IQuery;
			
			[Bindable]
			public var titleText:String;
			[Bindable]
			public var provider:ArrayCollection;
			
			
			
			public function generateModuleProvider(chambreId:Object=0):void
			{
				db = Database.getInstance();
				query= new Query();
				query.connect("conn1", db);
				query.addEventListener(Query.QUERY_END, provideModule);
				query.addEventListener(Query.QUERY_ERROR,queryError);
				
				if((index.categorieUtilisateur == "hospitalier")||(index.categorieUtilisateur == "inscription")||((index.categorieUtilisateur == "admin")&& (roleSelecteur.selectedLabel=="Hospitalier")))
				{
					query.execute("select ins.nom,ins.prenom,ins.id_personne,g.nom as gare,ins.section from gare g, (SELECT p.nom, p.prenom,p.id_personne,h.id_gare,s.section" +
						" FROM `personne` p, `etre_hospitalier` eh, `inscrire` i, hospitalier h, secteur s" +
						" WHERE eh.id_pele ="+ index.peleActuel.id_pele+
						" AND i.id_pele ="+ index.peleActuel.id_pele+
						" AND p.id_personne = i.id_personne " +
						" AND i.id_transport_retour = 0"+
						" AND p.id_personne = eh.id_personne" +
						" AND h.transport = 'car'" +
						" AND h.id_hospitalier = eh.id_hospitalier" +
						" AND h.annuler='non' " +
						" AND p.id_secteur = s.id_secteur" +
						" GROUP BY p.id_personne) ins where ins.id_gare = g.id_gare ");
				}
				else if((index.categorieUtilisateur == "malade")||((index.categorieUtilisateur == "admin")&& (roleSelecteur.selectedLabel=="Malade")))
				{
					query.execute("select ins.nom,ins.prenom,ins.id_personne,g.nom as gare,ins.section from gare g, (SELECT p.nom, p.prenom,p.id_personne,m.id_gare,s.section" +
						" FROM `personne` p, `etre_malade` em, `inscrire` i, malade m, secteur s" +
						" WHERE em.id_pele ="+ index.peleActuel.id_pele+
						" AND i.id_pele ="+ index.peleActuel.id_pele+
						" AND p.id_personne = i.id_personne " +
						" AND i.id_transport_retour = 0"+
						" AND p.id_personne = em.id_personne" +
						" AND m.id_malade = em.id_malade" +
						" AND m.annuler='non' " +
						" AND p.id_secteur = s.id_secteur" +
						" GROUP BY p.id_personne) ins where ins.id_gare = g.id_gare ");
				}
				else if((index.categorieUtilisateur == "pelerin")||((index.categorieUtilisateur == "admin")&& (roleSelecteur.selectedLabel=="Pélerin")))
				{
					query.execute("select ins.nom,ins.prenom,ins.id_personne,g.nom as gare,ins.section from gare g, (SELECT p.nom, p.prenom,p.id_personne,pel.id_gare,s.section" +
						" FROM `personne` p, `etre_pelerin` ep, `inscrire` i, pelerin pel, secteur s" +
						" WHERE ep.id_pele ="+ index.peleActuel.id_pele+
						" AND i.id_pele ="+ index.peleActuel.id_pele+
						" AND p.id_personne = i.id_personne " +
						" AND i.id_transport_retour = 0"+
						" AND p.id_personne = ep.id_personne" +
						" AND pel.id_pelerin = ep.id_pelerin" +
						" AND p.id_secteur = s.id_secteur" +
						" GROUP BY p.id_personne) ins where ins.id_gare = g.id_gare ");
				}
			}
			
			private function provideModule(evt:Object):void
			{
				provider = query.getRecords();
				provider.sort = SortUtil.minNomPrenomSort();
				provider.refresh();
			}
			private function queryError(evt:Event):void
			{
				Alert.show(query.getError());
			}
			
			protected function affecterA(event:MouseEvent):void
			{
				if((listHospi.selectedItems)&&(listHospi.selectedItems.length>0))
				{
					var formulaireCar:FormulaireCar = new FormulaireCar();
					PopUpManager.addPopUp(formulaireCar,this.parentApplication as DisplayObject,true);
					PopUpManager.centerPopUp(formulaireCar);
					formulaireCar.setFormulaire(listHospi.selectedItems);
					formulaireCar.addEventListener(Car.RELOAD_MODULE,refresh);
				}
			}
			
			private function refresh(evt:Event):void
			{
				this.dispatchEvent( new DocEvent(Car.RELOAD_MODULE));
			}
			
			private var searchTimer:Timer;
			
			public function filter():void
			{
				if(!searchTimer)
				{
					searchTimer = new Timer(500,1);
					searchTimer.addEventListener(TimerEvent.TIMER_COMPLETE,function(evt:Event):void{
						provider.filterFunction = searchModel;
						provider.refresh();	
					});
				}	
				else
					searchTimer.reset();
				
				searchTimer.start();
			}
			
			private function searchModel(item:Object):Boolean
			{
				var isMatch:Boolean = false
				
				if(item['nom']!=null)
				{
					if(String(item['nom']).toLowerCase().search(searchInput.text.toLowerCase()) != -1)
					{
						isMatch = true
					}
				}
				if(item['prenom']!=null)
				{
					if(String(item['prenom']).toLowerCase().search(searchInput.text.toLowerCase()) != -1)
					{
						isMatch = true
					}
				}
				
				return isMatch;    
			}
		]]>
	</mx:Script>
	<mx:Label id="title" text="{titleText}"/>
	<mx:VBox height="100%"  width="100%">
		<mx:HBox width="100%">
			<mx:Button label="Voyage avec" click="affecterA(event)" enabled="{!index.visuMode}"/>
			<mx:Canvas>
				<mx:Image source="@Embed('/assets/search.png')" />
				<mx:TextInput id="searchInput" left="20" borderStyle="none" backgroundAlpha="0" width="110" focusThickness="0" change="{this.filter()}"
							  borderSkin="@Embed('/assets/blank.png')" textAlign="left"
							  />
			</mx:Canvas>
			<mx:Spacer width="100%"/>
			<mx:ComboBox id="roleSelecteur" dataProvider="{new ArrayCollection(['Hospitalier','Malade','Pélerin'])}" visible="{(index.categorieUtilisateur == 'admin')}" change="generateModuleProvider(event)"/>
		</mx:HBox>
		<mx:DataGrid id="listHospi" dataProvider="{provider}" height="100%" width="100%"  allowMultipleSelection="true">
			<mx:columns>
				<mx:DataGridColumn headerText="Nom" dataField="nom"/>
				<mx:DataGridColumn headerText="Prenom" dataField="prenom"/>
				<mx:DataGridColumn headerText="Gare Demandée" dataField="gare"/>
				<mx:DataGridColumn headerText="Secteur" dataField="section"/>
			</mx:columns>
		</mx:DataGrid>
	</mx:VBox>
</mx:VBox>
