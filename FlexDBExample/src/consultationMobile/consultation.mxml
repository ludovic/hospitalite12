<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300" xmlns:consultation="consultationMobile.*" creationComplete="canvas1_creationCompleteHandler(event)" >
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import common.events.DocEvent;
			
		//	import mx.controls.Alert;
			import mx.events.FlexEvent;
			import phi.framework.sql.SQLErrorEvent;
			import phi.framework.sql.SQLEvent;
			
			private var personneData:Object;
			
			protected function canvas1_creationCompleteHandler(event:Object):void
			{
				QueryHelper.execute("SELECT * FROM etre_hospitalier h, personne p, hospitalier ho WHERE h.id_personne = p.id_personne " +
					" AND h.id_hospitalier = ho.id_hospitalier AND h.id_pele="+index.peleActuel.id_pele, provideNameGrid, queryError);
			}
			
			private function provideNameGrid(evt:SQLEvent):void
			{
				listeNom.listeNomProvider = new ArrayCollection(evt.result.data);
				listeNom.addEventListener(ListeNom.PERSONNE_SELECTED,setPersonneFields);
				listeNom.addEventListener(ListeNom.REFRESH,canvas1_creationCompleteHandler);
			}

			private function queryError(evt:Event):void
			{
				//Alert.show((evt.target as Query).getError());
			}
			
			private function setPersonneFields(event:DocEvent):void
			{
				personneData = new Object();
				personneData.info = event.body;
				QueryHelper.execute("SELECT h.Libelle, t.nom_transport, g.nom, pp.heure_aller  FROM inscrire i, hebergement h, transport t, gare g, passer_par pp " +
					" WHERE i.id_personne ="+personneData.info.id_personne +
					" AND i.id_hebergement_retenu = h.id_hebergement"+ 
					" AND i.id_transport = t.id_transport"+ 
					" AND i.id_gare = g.id_gare"+ 
					" AND pp.id_gare = i.id_gare"+
					" AND pp.id_transport = i.id_transport"+
					" AND pp.id_pele = i.id_pele"+
					" AND i.id_pele="+index.peleActuel.id_pele +
					" GROUP BY i.id_personne", getTransportHebergement, queryError);
			}
			
			private function getTransportHebergement(event:SQLEvent):void
			{
				if(event.result.data.length>0)
					personneData.transHeb = event.result.data[0];
				else
					personneData.transHeb = null;
				
				QueryHelper.execute("SELECT t.nom_transport, g.nom, pp.heure_retour  FROM inscrire i, transport t, gare g, passer_par pp " +
					" WHERE i.id_personne ="+personneData.info.id_personne +
					" AND i.id_transport_retour = t.id_transport"+ 
					" AND i.id_gare_retour = g.id_gare"+ 
					" AND pp.id_gare = i.id_gare_retour"+
					" AND pp.id_transport = i.id_transport_retour"+
					" AND pp.id_pele = i.id_pele"+
					" AND i.id_pele="+index.peleActuel.id_pele +
					" GROUP BY i.id_personne", getTransportRetour, queryError);
				
			}
			
			private function getTransportRetour(event:SQLEvent):void
			{
				if(event.result.data.length>0)
					personneData.transRetour = event.result.data[0];
				else
					personneData.transRetour = null;
				
				QueryHelper.execute("SELECT a.Service  FROM obtenir o, affectation a" +
					" WHERE o.id_hospitalier ="+personneData.info.id_hospitalier +
					" AND o.id_affectation = a.id_affectation", getAffectations, queryError);
			}
			
			private function getAffectations(event:SQLEvent):void
			{
				personneData.affectations = new ArrayCollection(evt.result.data);
				detailsPersonne.data = personneData;
			}
		]]>
	</fx:Script>
	<consultation:ListeNom id="listeNom" width="200"/>
	<consultation:Details id="detailsPersonne" width="100%" height="100%">
	</consultation:Details>
	
</s:HGroup>
