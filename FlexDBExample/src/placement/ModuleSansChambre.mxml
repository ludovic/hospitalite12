<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="432" height="100%">
	<mx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			import common.events.DocEvent;
			import common.helper.FeuilleInscriptionMalade;
			import common.helper.QueryHelper;
			import common.helper.SortUtil;
			
			import phi.framework.sql.SQLErrorEvent;
			import phi.framework.sql.SQLEvent;
			
			[Bindable]
			public var titleText:String;
			[Bindable]
			public var provider:ArrayCollection;
			
			
			
			public function generateModuleProvider(chambreId:int=0):void
			{
				QueryHelper.execute("select * from malade m," +
				" personne p, etre_malade em " +
				" where m.numero=0 " +
				" and em.id_pele=" + index.peleActuel.id_pele+
				" and m.id_malade=em.id_malade" +
				" and m.annuler = 'non' " +
				" and p.id_personne=em.id_personne", provideModule, queryError);
			}
			
			private function provideModule(evt:SQLEvent):void
			{
				provider = new ArrayCollection(evt.result.data);
				provider.sort = SortUtil.nomPrenomSort();
				provider.refresh();
			}
			private function queryError(evt:SQLErrorEvent):void
			{
				Alert.show(evt.error);
			}
			
			protected function affecterA(event:MouseEvent):void
			{
				if(listMalade.selectedItem)
				{
					var formulaireChambre:FormulaireChambre = new FormulaireChambre();
					PopUpManager.addPopUp(formulaireChambre,this.parentApplication as DisplayObject,true);
					PopUpManager.centerPopUp(formulaireChambre);
					formulaireChambre.setFormulaire(listMalade.selectedItem);
					formulaireChambre.addEventListener(Chambre.RELOAD_MODULE,refresh);
				}
			}
			
			protected function voir(event:MouseEvent):void
			{
				if(listMalade.selectedItem)
				{
					var feuilleInscriptionMalade:FeuilleInscriptionMalade = new FeuilleInscriptionMalade();
					PopUpManager.addPopUp(feuilleInscriptionMalade,this.parentApplication as DisplayObject,true);
					PopUpManager.centerPopUp(feuilleInscriptionMalade);
					feuilleInscriptionMalade.setFormulaire(listMalade.selectedItem.id_malade);
				}
			}
			
			private function refresh(evt:Event):void
			{
				this.dispatchEvent( new DocEvent(Chambre.RELOAD_MODULE));
			}
			
			private var searchTimer:Timer;
			
			public function filter():void
			{
				if(!searchTimer)
				{
					searchTimer = new Timer(500,1);
					searchTimer.addEventListener(TimerEvent.TIMER_COMPLETE,function(evt:Event):void{
						provider.filterFunction = searchModel;
						provider.refresh();	
					});
				}	
				else
					searchTimer.reset();
				
				searchTimer.start();
			}
			
			private function searchModel(item:Object):Boolean
			{
				var isMatch:Boolean = false
				
				if(item['Nom']!=null)
				{
					if(String(item['Nom']).toLowerCase().search(searchInput.text.toLowerCase()) != -1)
					{
						isMatch = true
					}
				}
				if(item['Prenom']!=null)
				{
					if(String(item['Prenom']).toLowerCase().search(searchInput.text.toLowerCase()) != -1)
					{
						isMatch = true
					}
				}
				
				return isMatch;    
			}
		]]>
	</mx:Script>
	<mx:Label id="title" text="{titleText}"/>
	<mx:HBox height="100%">
		<mx:VBox height="100%">
			<mx:Button label="Affecter Ã " click="affecterA(event)" enabled="{!index.visuMode}"/>
			<mx:Button label="Voir fiche" click="voir(event)"/>
		</mx:VBox>
		<mx:VBox height="100%">
		<mx:Canvas>
			<mx:Image source="@Embed('/assets/search.png')" />
			<mx:TextInput id="searchInput" left="20" borderStyle="none" backgroundAlpha="0" width="110" focusThickness="0" change="{this.filter()}"
						  borderSkin="@Embed('/assets/blank.png')" textAlign="left"
						  />
		</mx:Canvas>
		<mx:DataGrid id="listMalade" dataProvider="{provider}" height="100%" width="100%">
			<mx:columns>
				<mx:DataGridColumn headerText="Nom" dataField="Nom"/>
				<mx:DataGridColumn headerText="Prenom" dataField="Prenom"/>
				<mx:DataGridColumn headerText="Codification" dataField="codification"/>
			</mx:columns>
		</mx:DataGrid>
		<mx:Label text="{'Nombre de lignes : ' + provider.length }"/>
		</mx:VBox>
	</mx:HBox>
</mx:VBox>
