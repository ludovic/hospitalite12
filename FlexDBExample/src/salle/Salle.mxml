<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" creationComplete="canvas1_creationCompleteHandler(event)" verticalScrollPolicy="off">
	<mx:Script>
		<![CDATA[
			import common.helper.DataGridDataExporter;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Label;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			
			import phi.db.Database;
			import phi.db.Query;
			import phi.interfaces.IDatabase;
			import phi.interfaces.IQuery;
			
			import proxy.AffectationProxy;
			import proxy.ChambreProxy;
			import proxy.ModuleProxy;
			
			private var db       :IDatabase;
			private var query    :IQuery;
			private var query2    :IQuery;
			
			[Bindable]
			private var moduleSalleList:ArrayCollection;
			
			public static var RELOAD_MODULE:String = "reloadModule";
			private var moduleList:Array = [];
			
			protected function canvas1_creationCompleteHandler(event:FlexEvent):void
			{
				if(moduleSalleList == null)
				{
					moduleSalleList = ModuleProxy.ModuleDispo;
					moduleSalleList.filterFunction = function(item:Object):Boolean{ return item.etage == etageCB.selectedItem.value; }
					moduleSalleList.refresh();
				}
				
				moduleList = [];
				container.removeAllChildren();
				containerSans.removeAllChildren();
				var chambreArray:ArrayCollection = ChambreProxy.ChambreDispo;
				var moduleSans:ModuleSansSalle = new ModuleSansSalle();
				
				
				moduleList.push({module:moduleSans,chambre:{numero:0}});
				containerSans.addChild(moduleSans);
				
				moduleSans.addEventListener(RELOAD_MODULE,provideModules); 
				var tabList:Array = [];
				var lastIdModule:int=0;
				var sousContainer:VBox = new VBox();
				sousContainer.setStyle("borderColor",0x000000);
				sousContainer.setStyle("borderStyle","Solid");
				sousContainer.percentHeight = sousContainer.percentWidth = 100;
				
				var moduleSelectedId:int = moduleCB.selectedItem.id_module;
				var etageSelectedId:int =  etageCB.selectedItem.value;
				for(var i:int=0;i<chambreArray.length;++i)
				{
					 if(chambreArray[i].etage == etageSelectedId)
					{
						if(chambreArray[i].id_module == moduleSelectedId)
						{ 
							if(chambreArray[i].id_module !=lastIdModule)
							{
								container.addChild(sousContainer);
								sousContainer = new VBox();
								sousContainer.setStyle("borderColor",0x000000);
								sousContainer.setStyle("borderStyle","Solid");
								sousContainer.percentHeight = sousContainer.percentWidth = 100;
								lastIdModule = chambreArray[i].id_module;
								var moduleLabel:Label = new Label();
								moduleLabel.setStyle("fontSize",16);
								moduleLabel.text = "Module : " + chambreArray[i].module_libelle ;
								
								sousContainer.addChild(moduleLabel);
								var mod:Module = new Module();
								moduleList.push({module:mod,id:chambreArray[i].id_module});
								sousContainer.addChild(mod);
								mod.addEventListener(RELOAD_MODULE,provideModules);
								var labelSalle:Label = new Label();
								labelSalle.setStyle("fontSize",14);
								labelSalle.text = "Salles : ";
								sousContainer.addChild(labelSalle);
							}
				
							var module:ModuleSalle = new ModuleSalle();
							module.percentWidth = 100;
							module.percentHeight = 100;
							module.titleText = chambreArray[i].libelle as String;
							module.capacite = chambreArray[i].lits as int;
							moduleList.push({module:module,id:chambreArray[i].numero});
							sousContainer.addChild(module);
							tabList.push(module.titleText);
							module.addEventListener(RELOAD_MODULE,provideModules);
						}
							
					} 
				}
				container.addChild(sousContainer);
				 provideModules();  
				 container.invalidateDisplayList();
				 sousContainer.invalidateDisplayList();
				 
			/* 	leftTabs.dataProvider(tabList); */
			}
			
			private function provideModules(evt:Object=null):void
			{
				for(var j:int=0;j<moduleList.length;j++)
				{
					moduleList[j].module.generateModuleProvider(moduleList[j].id,moduleList[j].module.moduleId);
				}
			}
			
			protected function etageCB_changeHandler(event:ListEvent):void
			{
				moduleSalleList = ModuleProxy.ModuleDispo;
				moduleSalleList.filterFunction = function(item:Object):Boolean{ return item.etage == etageCB.selectedItem.value; }
				moduleSalleList.refresh();
				moduleCB.selectedIndex = 0;
				canvas1_creationCompleteHandler(null);
			}
			
			protected function moduleCB_changeHandler(event:ListEvent):void
			{
				canvas1_creationCompleteHandler(null);
			}
			
			////Export////
			protected function exportDatagrid(event:MouseEvent):void
			{
				db = Database.getInstance();
				query= new Query();
				query.connect("conn1", db);
				query.addEventListener(Query.QUERY_END, getModule);
				query.addEventListener(Query.QUERY_ERROR,queryError);
				query.execute("SELECT p.nom, p.prenom, c.libelle, c.id_module, m.libelle as libelle_module" +
					" FROM `personne` p, `hospitalier` h, `etre_hospitalier` eh, `s_occuper` o, `chambre` c,`module` m" +
					" WHERE eh.id_pele = " + index.peleActuel.id_pele+
					" AND eh.id_hospitalier = o.id_hospitalier" +
					" AND h.id_hospitalier = eh.id_hospitalier" +
					" AND p.id_personne = eh.id_personne" +
					" AND m.id_module = c.id_module " +
					"AND c.numero = o.numero " +
					"ORDER BY o.numero");
			}
			
			private function getModule(evt:Object):void
			{
				query2= new Query();
				query2.connect("conn1", db);
				query2.addEventListener(Query.QUERY_END, provideExportDatagrid);
				query2.addEventListener(Query.QUERY_ERROR,queryError);
				query2.execute("(SELECT p.nom, p.prenom, eh.id_hospitalier, ('responsable') 'role',rm.id_module " +
					" FROM `personne` p, `etre_hospitalier` eh, `responsable_module` rm" +
					" WHERE eh.id_pele ="+ index.peleActuel.id_pele+
					" AND eh.id_hospitalier = rm.id_hospitalier" +
					" AND p.id_personne = eh.id_personne )" +
					" UNION " +
					"(SELECT p.nom, p.prenom, eh.id_hospitalier, ('ide') 'role',im1.id_module " +
					" FROM `personne` p, `etre_hospitalier` eh, `ide_module` im1" +
					" WHERE eh.id_pele ="+ index.peleActuel.id_pele+
					" AND eh.id_hospitalier = im1.id_hospitalier" +
					" AND p.id_personne = eh.id_personne )" +
					" UNION " +
					"(SELECT p.nom, p.prenom, eh.id_hospitalier, ('brancardier') 'role',bm2.id_module " +
					" FROM `personne` p, `etre_hospitalier` eh, `brancardier_module` bm2" +
					" WHERE eh.id_pele ="+ index.peleActuel.id_pele+
					" AND eh.id_hospitalier = bm2.id_hospitalier" +
					" AND p.id_personne = eh.id_personne )");
			}
			
			private function provideExportDatagrid(evt:Object):void
			{
				Alert.show("Voulez-vous exporter les salles ?","",Alert.OK|Alert.CANCEL,this, alertClickHandler);
			}
			
			private function alertClickHandler(event:CloseEvent):void
			{
				var arraySalle:ArrayCollection = query.getRecords();
				var arrayModule:ArrayCollection = query2.getRecords();
				var csvProvider:ArrayCollection = new ArrayCollection();
				var lastModuleID:int = 0;
				for(var i:int=0;i<arraySalle.length;i++)
				{
					var moduleID:int = arraySalle[i].id_module;
					if(moduleID != lastModuleID)
					{
						csvProvider.addItem({A_module:"Module:",B_libelle:arraySalle[i].libelle_module});
						for(var j:int=0; j<arrayModule.length;j++)
						{
							if(arrayModule[j].id_module==moduleID)
								csvProvider.addItem({A_nom:arrayModule[j].nom, B_prenom:arrayModule[j].prenom, C_role:arrayModule[j].role});
						}
						lastModuleID = moduleID;
						csvProvider.addItem({module:"Salles"});
					}
					csvProvider.addItem({A_nom:arraySalle[i].nom, B_prenom:arraySalle[i].prenom, C_salle:arraySalle[i].libelle});
				}
				
				switch (event.detail){
					case Alert.OK:
						var csvText:String = exportCSVFromArrayCollection(csvProvider,false);
						var fileSave:FileReference= new FileReference();
						fileSave.save(csvText,"export_salle.csv");
						break;
					case Alert.CANCEL:
						break;
				}
				
			}
			private function queryError(evt:Event):void
			{
				Alert.show((evt.target as Query).getError());
			}
			
			public function exportCSVFromArrayCollection(ac:ArrayCollection,header:Boolean=true):String
			{
				var text:String = "";
				var rows:int = ac.length;
				if(header)
				{
					for(var n:String in ac[0])
					{
						text = text + n +";";
					}
					text = text + "\n";
				}
				for(var m:int=0;m<rows;++m)
				{
					for each(var o:String in ac[m])
					{
						text = text + o +";";
					}
					text = text.slice(0,text.length-1);
					text = text + "\n";
				}
				return text;
			}	
			
			protected function pdfModules(event:MouseEvent):void
			{
				var url:String = "http://logiciel.bouges.fr/pdf/module.php?pele=" +index.peleActuel.id_pele;
				var urlRequest:URLRequest = new URLRequest(url);
				navigateToURL(urlRequest,"_blank");
			}
			protected function pdfModule(event:MouseEvent):void
			{
				var url:String = "http://logiciel.bouges.fr/pdf/module.php?pele=" +index.peleActuel.id_pele+"&id="+moduleCB.selectedItem.id_module ;
				var urlRequest:URLRequest = new URLRequest(url);
				navigateToURL(urlRequest,"_blank");
			}
		]]>
	</mx:Script>
	
	<mx:HBox width="100%">
		<mx:Button icon="@Embed(source='assets/reload.gif')" click="provideModules(event)" height="22"/>
		<mx:Spacer width="100%"/>
		<mx:Button label="Générer les Modules" click="pdfModules(event)" />
		<mx:Button label="Exporter Liste des Salles" click="exportDatagrid(event)"/>
	</mx:HBox>
	<mx:HBox width="100%">
		<mx:Label text="Etage :"/><mx:ComboBox id="etageCB" dataProvider="{[{nom:'1er',value:1},{nom:'2ème',value:2},{nom:'3ème',value:3},{nom:'4ème',value:4}]}" labelField="nom" change="etageCB_changeHandler(event)" selectedIndex="1"/>
		<mx:Label text="Module :"/><mx:ComboBox id="moduleCB" dataProvider="{moduleSalleList}" labelField="libelle" change="moduleCB_changeHandler(event)"/>
		<mx:Spacer width="25%" />
		<mx:Button label="Générer ce Module" click="pdfModule(event)" />
	</mx:HBox>
	<mx:HBox x="16.5" y="64" width="100%" height="100%" verticalScrollPolicy="off">
		<mx:VBox id="container" height="{this.height*0.9}" width="100%">
		</mx:VBox>
		<mx:VBox id="containerSans" height="100%" width="100%">
		</mx:VBox>
	</mx:HBox>
</mx:VBox>
